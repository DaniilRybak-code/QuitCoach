import{cH as m,dc as l,cI as A,ct as w,d1 as p,M as h,dd as u,o as E,V as S,$ as T,K as g,P as b,F as v,a_ as d,de as c,bb as R,bG as k,bO as D,aW as x,aJ as U,bA as f,bR as O,bw as $,bl as I,be as _,bs as C}from"./index-14a05817.js";class N{constructor(){this.isAuthenticated=!1,this.currentUser=null,this.authStateListeners=new Set,this.sessionTimeout=null,this.tokenRefreshInterval=null,this.lastActivity=Date.now(),this.sessionTimeoutDuration=30*60*1e3,this.tokenRefreshIntervalDuration=5*60*1e3,this.isInitialized=!1,this.pendingOperations=new Map,this.config={sessionTimeout:30*60*1e3,tokenRefreshInterval:5*60*1e3,maxRetries:3,retryDelay:1e3,enableActivityTracking:!0,enableSessionTimeout:!0,enableTokenRefresh:!0},this.init()}async init(){try{console.log("üîê Initializing AuthStateValidator..."),this.setupAuthStateListener(),this.setupTokenRefreshListener(),this.setupActivityTracking(),this.setupSessionTimeout(),this.isInitialized=!0,console.log("‚úÖ AuthStateValidator initialized")}catch(t){throw console.error("‚ùå Failed to initialize AuthStateValidator:",t),t}}setupAuthStateListener(){m(l,async t=>{console.log("üîê Auth state changed:",t?`User: ${t.uid}`:"No user");const e=this.isAuthenticated;this.isAuthenticated=!!t,this.currentUser=t,t?await this.handleUserAuthenticated(t):await this.handleUserSignedOut(),this.notifyAuthStateChange({isAuthenticated:this.isAuthenticated,user:this.currentUser,wasAuthenticated:e,timestamp:Date.now()})})}setupTokenRefreshListener(){this.config.enableTokenRefresh&&A(l,async t=>{t&&(console.log("üîÑ Token refreshed for user:",t.uid),this.lastActivity=Date.now(),this.resetSessionTimeout())})}setupActivityTracking(){if(!this.config.enableActivityTracking)return;const t=["mousedown","mousemove","keypress","scroll","touchstart","click"],e=()=>{this.lastActivity=Date.now(),this.resetSessionTimeout()};t.forEach(i=>{document.addEventListener(i,e,{passive:!0})}),document.addEventListener("visibilitychange",()=>{document.hidden||e()})}setupSessionTimeout(){this.config.enableSessionTimeout&&this.resetSessionTimeout()}async handleUserAuthenticated(t){try{console.log("‚úÖ User authenticated:",t.uid),await this.validateUserToken(t),this.resetSessionTimeout(),await this.processPendingOperations(),this.setupTokenRefresh()}catch(e){console.error("‚ùå Error handling user authentication:",e),await this.handleAuthError(e)}}async handleUserSignedOut(){try{console.log("üëã User signed out"),this.clearSessionTimeout(),this.clearTokenRefresh(),this.pendingOperations.clear(),this.isAuthenticated=!1,this.currentUser=null,this.lastActivity=Date.now()}catch(t){console.error("‚ùå Error handling user sign out:",t)}}async validateUserToken(t){try{const e=await w(t,!0);if(!e)throw new Error("No valid token available");const i=this.decodeToken(e),r=Date.now()/1e3;if(i.exp<r)throw new Error("Token has expired");return console.log("‚úÖ User token validated"),!0}catch(e){throw console.error("‚ùå Token validation failed:",e),e}}decodeToken(t){try{const i=t.split(".")[1].replace(/-/g,"+").replace(/_/g,"/"),r=decodeURIComponent(atob(i).split("").map(function(s){return"%"+("00"+s.charCodeAt(0).toString(16)).slice(-2)}).join(""));return JSON.parse(r)}catch(e){throw console.error("‚ùå Error decoding token:",e),e}}resetSessionTimeout(){this.config.enableSessionTimeout&&(this.clearSessionTimeout(),this.sessionTimeout=setTimeout(async()=>{console.log("‚è∞ Session timeout reached"),await this.handleSessionTimeout()},this.config.sessionTimeout))}clearSessionTimeout(){this.sessionTimeout&&(clearTimeout(this.sessionTimeout),this.sessionTimeout=null)}async handleSessionTimeout(){try{console.log("‚è∞ Handling session timeout..."),this.showSessionTimeoutWarning(),await p(l)}catch(t){console.error("‚ùå Error handling session timeout:",t)}}setupTokenRefresh(){this.config.enableTokenRefresh&&(this.clearTokenRefresh(),this.tokenRefreshInterval=setInterval(async()=>{if(this.isAuthenticated&&this.currentUser)try{await w(this.currentUser,!0),console.log("üîÑ Token refreshed automatically")}catch(t){console.error("‚ùå Token refresh failed:",t),await this.handleAuthError(t)}},this.config.tokenRefreshInterval))}clearTokenRefresh(){this.tokenRefreshInterval&&(clearInterval(this.tokenRefreshInterval),this.tokenRefreshInterval=null)}async validateAuthState(t,e=0){try{if(!this.isAuthenticated||!this.currentUser)throw new Error("User not authenticated");if(await this.validateUserToken(this.currentUser),this.isSessionExpired())throw new Error("Session has expired");return console.log("‚úÖ Auth state validated for operation:",t),!0}catch(i){if(console.error("‚ùå Auth state validation failed:",i),e<this.config.maxRetries)return console.log(`üîÑ Retrying auth validation (${e+1}/${this.config.maxRetries})...`),await this.delay(this.config.retryDelay*(e+1)),await this.validateAuthState(t,e+1);throw await this.handleAuthError(i),i}}async executeWithAuth(t,e){try{return await this.validateAuthState(t),await e()}catch(i){throw console.error(`‚ùå Operation failed: ${t}`,i),this.isAuthError(i)?(await this.queueOperation(t,e),new Error(`Operation queued due to auth error: ${i.message}`)):i}}async queueOperation(t,e){const i=`op_${Date.now()}_${Math.random().toString(36).substr(2,9)}`;return this.pendingOperations.set(i,{id:i,operation:t,function:e,timestamp:Date.now(),retryCount:0}),console.log(`üìù Operation queued: ${t} (${i})`),i}async processPendingOperations(){if(this.pendingOperations.size===0)return;console.log(`üîÑ Processing ${this.pendingOperations.size} pending operations...`);const t=Array.from(this.pendingOperations.values());for(const e of t)try{await this.executeWithAuth(e.operation,e.function),this.pendingOperations.delete(e.id),console.log(`‚úÖ Pending operation completed: ${e.operation}`)}catch(i){console.error(`‚ùå Pending operation failed: ${e.operation}`,i),e.retryCount++,e.retryCount>=this.config.maxRetries&&(this.pendingOperations.delete(e.id),console.log(`‚ùå Pending operation permanently failed: ${e.operation}`))}}async handleAuthError(t){console.error("üîê Authentication error:",t),this.isTokenExpiredError(t)?this.showTokenExpiredError():this.isNetworkError(t)?this.showNetworkError():this.isPermissionError(t)?this.showPermissionError():this.showGenericAuthError(t),this.isCriticalAuthError(t)&&await p(l)}isAuthError(t){return["auth/user-not-found","auth/wrong-password","auth/invalid-email","auth/user-disabled","auth/too-many-requests","auth/network-request-failed","auth/requires-recent-login","auth/invalid-credential","auth/token-expired","auth/invalid-token"].includes(t.code)||t.message.includes("not authenticated")||t.message.includes("Session has expired")}isTokenExpiredError(t){return t.code==="auth/token-expired"||t.message.includes("Token has expired")}isNetworkError(t){return t.code==="auth/network-request-failed"||t.message.includes("network")}isPermissionError(t){return t.code==="auth/requires-recent-login"||t.message.includes("permission")}isCriticalAuthError(t){return["auth/user-disabled","auth/invalid-credential","auth/token-expired","auth/invalid-token"].includes(t.code)||t.message.includes("Session has expired")}isSessionExpired(){return this.config.enableSessionTimeout?Date.now()-this.lastActivity>this.config.sessionTimeout:!1}showSessionTimeoutWarning(){this.showNotification({type:"warning",title:"‚è∞ Session Timeout",message:"Your session has expired. Please sign in again.",duration:1e4,actions:[{text:"Sign In",action:()=>window.location.reload()}]})}showTokenExpiredError(){this.showNotification({type:"error",title:"üîê Session Expired",message:"Your session has expired. Please sign in again.",duration:15e3,actions:[{text:"Sign In",action:()=>window.location.reload()}]})}showNetworkError(){this.showNotification({type:"error",title:"üåê Network Error",message:"Unable to connect to the server. Please check your connection.",duration:1e4})}showPermissionError(){this.showNotification({type:"error",title:"üö´ Permission Denied",message:"You do not have permission to perform this action.",duration:8e3})}showGenericAuthError(t){this.showNotification({type:"error",title:"üîê Authentication Error",message:`Authentication failed: ${t.message}`,duration:1e4})}showNotification({type:t,title:e,message:i,duration:r=5e3,actions:s=[]}){const a=document.createElement("div");a.className=`fixed top-4 right-4 p-4 rounded-lg shadow-lg z-50 max-w-sm ${t==="error"?"bg-red-500":t==="warning"?"bg-yellow-500":t==="info"?"bg-blue-500":"bg-gray-500"} text-white`;let o=`
      <div class="font-bold">${e}</div>
      <div class="text-sm opacity-90 mt-1">${i}</div>
    `;s.length>0&&(o+='<div class="mt-3 flex gap-2">',s.forEach(n=>{o+=`
          <button 
            class="px-3 py-1 bg-white bg-opacity-20 rounded text-sm hover:bg-opacity-30 transition-colors"
            onclick="(${n.action.toString()})()"
          >
            ${n.text}
          </button>
        `}),o+="</div>"),o+=`
      <button class="mt-2 text-sm underline" onclick="this.parentElement.remove()">Dismiss</button>
    `,a.innerHTML=o,document.body.appendChild(a),setTimeout(()=>{a.parentNode&&a.parentNode.removeChild(a)},r)}addAuthStateListener(t){return this.authStateListeners.add(t),()=>{this.authStateListeners.delete(t)}}notifyAuthStateChange(t){this.authStateListeners.forEach(e=>{try{e(t)}catch(i){console.error("‚ùå Error in auth state listener:",i)}})}delay(t){return new Promise(e=>setTimeout(e,t))}getAuthState(){return{isAuthenticated:this.isAuthenticated,user:this.currentUser,isInitialized:this.isInitialized,lastActivity:this.lastActivity,pendingOperations:this.pendingOperations.size}}async requireAuth(t,e){return await this.executeWithAuth(t,e)}isUserAuthenticated(){return this.isAuthenticated&&!!this.currentUser}getCurrentUser(){return this.currentUser}getUserId(){var t;return((t=this.currentUser)==null?void 0:t.uid)||null}updateConfig(t){this.config={...this.config,...t},t.sessionTimeout&&(this.config.sessionTimeout=t.sessionTimeout,this.resetSessionTimeout()),t.tokenRefreshInterval&&(this.config.tokenRefreshInterval=t.tokenRefreshInterval,this.setupTokenRefresh())}destroy(){this.clearSessionTimeout(),this.clearTokenRefresh(),this.authStateListeners.clear(),this.pendingOperations.clear()}}class P{constructor(){this.authValidator=new N,this.operationCount=0,this.failedOperations=0,this.retryQueue=new Map,this.operationStats={total:0,successful:0,failed:0,retried:0,authErrors:0}}async databaseGet(t,e={}){return await this.executeWithAuth("DATABASE_GET",async()=>{const i=h(u,t),r=await E(i);if(e.requireExists&&!r.exists())throw new Error(`Data not found at path: ${t}`);return r.exists()?r.val():null})}async databaseSet(t,e,i={}){return await this.executeWithAuth("DATABASE_SET",async()=>{const r=h(u,t);return await S(r,e),!0})}async databaseUpdate(t,e,i={}){return await this.executeWithAuth("DATABASE_UPDATE",async()=>{const r=h(u,t);return await T(r,e),!0})}async databasePush(t,e,i={}){return await this.executeWithAuth("DATABASE_PUSH",async()=>{const r=h(u,t);return(await g(r,e)).key})}async databaseRemove(t,e={}){return await this.executeWithAuth("DATABASE_REMOVE",async()=>{const i=h(u,t);return await b(i),!0})}databaseOnValue(t,e,i={}){return this.executeWithAuth("DATABASE_ON_VALUE",async()=>{const r=h(u,t);return v(r,a=>{try{const o=a.exists()?a.val():null;e(o,a)}catch(o){console.error("‚ùå Error in onValue callback:",o),this.handleOperationError("DATABASE_ON_VALUE",o)}},i.errorCallback)})}async firestoreGetDoc(t,e,i={}){return await this.executeWithAuth("FIRESTORE_GET_DOC",async()=>{const r=d(c,t,e),s=await R(r);if(i.requireExists&&!s.exists())throw new Error(`Document not found: ${t}/${e}`);return s.exists()?{id:s.id,...s.data()}:null})}async firestoreSetDoc(t,e,i,r={}){return await this.executeWithAuth("FIRESTORE_SET_DOC",async()=>{const s=d(c,t,e);return await k(s,i,r),!0})}async firestoreUpdateDoc(t,e,i,r={}){return await this.executeWithAuth("FIRESTORE_UPDATE_DOC",async()=>{const s=d(c,t,e);return await D(s,i),!0})}async firestoreDeleteDoc(t,e,i={}){return await this.executeWithAuth("FIRESTORE_DELETE_DOC",async()=>{const r=d(c,t,e);return await x(r),!0})}async firestoreAddDoc(t,e,i={}){return await this.executeWithAuth("FIRESTORE_ADD_DOC",async()=>{const r=t(c,t);return(await U(r,e)).id})}async firestoreGetDocs(t,e={}){return await this.executeWithAuth("FIRESTORE_GET_DOCS",async()=>{let r=t(c,t);return e.where&&(r=f(r,O(e.where.field,e.where.operator,e.where.value))),e.orderBy&&(r=f(r,$(e.orderBy.field,e.orderBy.direction||"asc"))),e.limit&&(r=f(r,I(e.limit))),(await _(r)).docs.map(a=>({id:a.id,...a.data()}))})}firestoreOnSnapshot(t,e,i,r={}){return this.executeWithAuth("FIRESTORE_ON_SNAPSHOT",async()=>{const s=d(c,t,e);return C(s,o=>{try{const n=o.exists()?{id:o.id,...o.data()}:null;i(n,o)}catch(n){console.error("‚ùå Error in onSnapshot callback:",n),this.handleOperationError("FIRESTORE_ON_SNAPSHOT",n)}},r.errorCallback)})}async getUserData(t,e={}){if(!t)throw new Error("User ID is required");return await this.databaseGet(`users/${t}`,e)}async setUserData(t,e,i={}){if(!t)throw new Error("User ID is required");return await this.databaseSet(`users/${t}`,e,i)}async updateUserData(t,e,i={}){if(!t)throw new Error("User ID is required");return await this.databaseUpdate(`users/${t}`,e,i)}async getUserStats(t,e={}){if(!t)throw new Error("User ID is required");return await this.databaseGet(`users/${t}/stats`,e)}async setUserStats(t,e,i={}){if(!t)throw new Error("User ID is required");return await this.databaseSet(`users/${t}/stats`,e,i)}async updateUserStats(t,e,i={}){if(!t)throw new Error("User ID is required");return await this.databaseUpdate(`users/${t}/stats`,e,i)}async logBehavioralData(t,e,i,r={}){if(!t)throw new Error("User ID is required");return await this.executeWithAuth("BEHAVIORAL_LOG",async()=>{const s={...i,logType:e,userId:t,timestamp:Date.now(),date:new Date().toISOString().split("T")[0]},a=h(u,`users/${t}/behavioral_logs/${e}`);return(await g(a,s)).key})}async getBehavioralLogs(t,e,i={}){if(!t)throw new Error("User ID is required");return await this.databaseGet(`users/${t}/behavioral_logs/${e}`,i)}async getBuddyData(t,e={}){if(!t)throw new Error("User ID is required");return await this.databaseGet(`users/${t}/buddy`,e)}async setBuddyData(t,e,i={}){if(!t)throw new Error("User ID is required");return await this.databaseSet(`users/${t}/buddy`,e,i)}async executeWithAuth(t,e){this.operationCount++,this.operationStats.total++;try{await this.authValidator.validateAuthState(t);const i=await e();return this.operationStats.successful++,console.log(`‚úÖ Operation completed: ${t}`),i}catch(i){throw this.operationStats.failed++,this.failedOperations++,console.error(`‚ùå Operation failed: ${t}`,i),this.authValidator.isAuthError(i)&&(this.operationStats.authErrors++,await this.handleAuthError(t,e,i)),i}}async handleAuthError(t,e,i){console.log(`üîê Auth error for operation: ${t}`,i);const r=`retry_${Date.now()}_${Math.random().toString(36).substr(2,9)}`;this.retryQueue.set(r,{id:r,operation:t,function:e,timestamp:Date.now(),retryCount:0,maxRetries:3}),setTimeout(async()=>{await this.retryOperation(r)},2e3)}async retryOperation(t){const e=this.retryQueue.get(t);if(e)try{e.retryCount++,this.operationStats.retried++,console.log(`üîÑ Retrying operation: ${e.operation} (attempt ${e.retryCount})`),await this.executeWithAuth(e.operation,e.function),this.retryQueue.delete(t),console.log(`‚úÖ Retry successful: ${e.operation}`)}catch(i){console.error(`‚ùå Retry failed: ${e.operation}`,i),e.retryCount>=e.maxRetries?(console.log(`‚ùå Operation permanently failed: ${e.operation}`),this.retryQueue.delete(t)):setTimeout(async()=>{await this.retryOperation(t)},5e3*e.retryCount)}}handleOperationError(t,e){console.error(`‚ùå Operation error: ${t}`,e),this.showOperationError(t,e)}showOperationError(t,e){const i=document.createElement("div");i.className="fixed top-4 left-4 p-4 rounded-lg shadow-lg z-50 max-w-sm bg-red-500 text-white",i.innerHTML=`
      <div class="font-bold">‚ùå Operation Failed</div>
      <div class="text-sm opacity-90 mt-1">${t}: ${e.message}</div>
      <button class="mt-2 text-sm underline" onclick="this.parentElement.remove()">Dismiss</button>
    `,document.body.appendChild(i),setTimeout(()=>{i.parentNode&&i.parentNode.removeChild(i)},8e3)}getOperationStats(){return{...this.operationStats,retryQueueSize:this.retryQueue.size,successRate:this.operationStats.total>0?Math.round(this.operationStats.successful/this.operationStats.total*100):0}}getRetryQueue(){return Array.from(this.retryQueue.values())}clearRetryQueue(){this.retryQueue.clear()}getAuthState(){return this.authValidator.getAuthState()}isUserAuthenticated(){return this.authValidator.isUserAuthenticated()}getCurrentUser(){return this.authValidator.getCurrentUser()}getUserId(){return this.authValidator.getUserId()}addAuthStateListener(t){return this.authValidator.addAuthStateListener(t)}updateConfig(t){this.authValidator.updateConfig(t)}destroy(){this.authValidator.destroy(),this.retryQueue.clear()}}export{P as default};
